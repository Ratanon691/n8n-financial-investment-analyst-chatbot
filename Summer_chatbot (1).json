{
  "name": "Summer chatbot",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "line_webhook",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        0,
        0
      ],
      "id": "1588844f-9032-4b1d-9e04-9bf3dc349d5c",
      "name": "Webhook",
      "webhookId": "29ad21e3-c5a6-4982-9796-5f1f49456f5f"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.body.events[0].message.text }}",
        "options": {
          "systemMessage": "You are a Financial and Investment News Analyst Expert. \n\nYour task is to receive news, articles, stock price and other related information I give you 3 tools (3 mongodb database) to do the job\nThe first one is the news source. \nThe second has fundamental data of the stock.\nThe third has prices of the stock.\nyou can use multiple tools to construct a response), summarize them concisely, and interpret their impact. Provide your response in a clear, plain text format. and also use friendly casual language.\n\nWhen you're asked about the news, there're 3 cases that may happen. Decide which case it is and follow the instruction.\n\ncase 1: if there're multiple news related to the question you are asked, *important!* you only provide a list of the most important 10 related news' headline (use numbered list for each headline) then you can ask user which news they'd like to read. when user tell you which news they like to read you can construct a response as per instruction below\n\ncase2:if you were asked about news in particular sector you use the tool I gave you (google sheet that contain news source) and then read all the news then decide which news is in the asked sector. and provide a number list of 10 most important related news headlines only do not include anything else.\n\ncase3: if there's only one news or user asked for a particular news, you can go ahead and construct a response as instruction below\n\ninstruction for constructing response:\n for each news article provide a four-part response, maintaining this exact structure without any additional preamble or conversational text:\n\nHeadline: this is important! do not include the word \"Headline:\" in the response\n\nwrite an impactful headline for that particular news\n\nNews Summary: (do not include the word \"News Summary:\" in the response)\n\nPresent the very core information of the news in a very short, concise, easy-to-understand paragraph. the length of the paragraph must be less than 1/3 of the original news\n\nAvoid financial jargon. The summary should be clear enough for anyone to grasp the main point without having read the full article.\n\nNews Impact Interpretation:\n\nUse bullet points to outline the key implications and potential effects of the news.\n\nFocus on how this news might influence financial markets, specific industries, or investment decisions.\n\nsource: \n\ninclude the source of the original news which is in the links column in the google sheet.\n\nMaintain a clear and simple language, free of complex financial terms.\n\nImportant: Ensure all text within the summary and interpretation is standard plain text. Avoid using characters that require complex escaping in a text field (e.g., unescaped double quotes, backslashes not used for newlines).\n\nEvery response must adhere to this exact format. Do not repeat this prompt in your responses. Also make sure that your response must be very concise can be read within 3 min and make sure your response do not exceed 4800 characters.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        220,
        0
      ],
      "id": "2882e98b-98d7-4bf3-b901-a17597b03131",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        20,
        220
      ],
      "id": "e05fa877-c7b3-44df-b8cc-9c25c5afc982",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "MmM8EUab0v9jeu1p",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.body.events[0].source.userId }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        160,
        220
      ],
      "id": "f6780696-3d5f-47fc-af57-d4a47b89f884",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/reply",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 9mAi2hpLY0wNFMBAQWTHq+I+wo1KoBWQKCnnzlJ7S054eSLMSCuhvMsoXoMYWzChFgMoRIDZgFvSLVdLFHy71I/+za9pSoKNrloX0gU3mvd6QSxorMqwwb+C33REYhWtpmpon60yHr5j3cRN6ejuUAdB04t89/1O/w1cDnyilFU="
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"replyToken\": \"{{ $('Webhook').item.json.body.events[0].replyToken }}\",\n  \"messages\": [\n    {\n      \"type\": \"text\",\n      \"text\": {{ JSON.stringify($json.output) }}\n    }\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        580,
        0
      ],
      "id": "16988978-4e84-42b8-b947-d2d032105703",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "181MNoDjybmhgiAmowlzQAMgE0TPkw7zTwVm2qLZSmaA",
          "mode": "list",
          "cachedResultName": "Summer_news",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/181MNoDjybmhgiAmowlzQAMgE0TPkw7zTwVm2qLZSmaA/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/181MNoDjybmhgiAmowlzQAMgE0TPkw7zTwVm2qLZSmaA/edit#gid=0"
        },
        "options": {
          "outputFormatting": {
            "values": {
              "general": "FORMATTED_VALUE",
              "date": "FORMATTED_STRING"
            }
          }
        }
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        1060,
        200
      ],
      "id": "6004667a-3db9-4553-a6dc-12c3ba2e44ee",
      "name": "get news",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "0ztfuxQS3lG735n4",
          "name": "Google Sheets account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1OFGkKC2MAGu8xDJFug39Rc2ymokTPZ6qGpDvSxeQsEc",
          "mode": "list",
          "cachedResultName": "Summer_fundamental",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1OFGkKC2MAGu8xDJFug39Rc2ymokTPZ6qGpDvSxeQsEc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1OFGkKC2MAGu8xDJFug39Rc2ymokTPZ6qGpDvSxeQsEc/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        1060,
        360
      ],
      "id": "f63fa57d-3028-4cf6-92bd-622d3f2a5087",
      "name": "get fundamental",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "0ztfuxQS3lG735n4",
          "name": "Google Sheets account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "19G9Yp3kV1VVHYcE4rrqweeWV16WZfE8cmwJdjeXGUjU",
          "mode": "list",
          "cachedResultName": "Summer_ticker",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/19G9Yp3kV1VVHYcE4rrqweeWV16WZfE8cmwJdjeXGUjU/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/19G9Yp3kV1VVHYcE4rrqweeWV16WZfE8cmwJdjeXGUjU/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        1060,
        40
      ],
      "id": "f15addb4-f3ef-4d3b-a222-9f87d70ecb38",
      "name": "get tickers",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "0ztfuxQS3lG735n4",
          "name": "Google Sheets account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "collection": "Summer_news",
        "options": {}
      },
      "type": "n8n-nodes-base.mongoDbTool",
      "typeVersion": 1.2,
      "position": [
        860,
        220
      ],
      "id": "f1a91bd3-0109-489f-8933-8de05fc97720",
      "name": "get news1",
      "credentials": {
        "mongoDb": {
          "id": "A4HsBhY6itZFMei7",
          "name": "MongoDB account 2"
        }
      }
    },
    {
      "parameters": {
        "collection": "Summer_fundamental",
        "options": {}
      },
      "type": "n8n-nodes-base.mongoDbTool",
      "typeVersion": 1.2,
      "position": [
        740,
        220
      ],
      "id": "fb3481af-7414-4fc2-ac39-95d848fb50d3",
      "name": "get fundamental1",
      "credentials": {
        "mongoDb": {
          "id": "A4HsBhY6itZFMei7",
          "name": "MongoDB account 2"
        }
      }
    },
    {
      "parameters": {
        "collection": "Summer_ticker",
        "options": {}
      },
      "type": "n8n-nodes-base.mongoDbTool",
      "typeVersion": 1.2,
      "position": [
        620,
        220
      ],
      "id": "017d47f3-0e07-4716-9769-dd7b312610e7",
      "name": "get ticker",
      "credentials": {
        "mongoDb": {
          "id": "A4HsBhY6itZFMei7",
          "name": "MongoDB account 2"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get news": {
      "ai_tool": [
        []
      ]
    },
    "get fundamental": {
      "ai_tool": [
        []
      ]
    },
    "get tickers": {
      "ai_tool": [
        []
      ]
    },
    "get news1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get fundamental1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get ticker": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "0f595e03-e372-45da-a41f-fd984035d6f3",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "09f92901e633699a8e0a2e993344bdd921600a6b03619b8cab1c98e2aff659a7"
  },
  "id": "OCshnkeSMuDATeSk",
  "tags": []
}